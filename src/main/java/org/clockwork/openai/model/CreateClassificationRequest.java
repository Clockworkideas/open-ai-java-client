/*
 * OpenAI API
 * APIs for sampling from and fine-tuning language models
 *
 * OpenAPI spec version: 1.2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.clockwork.openai.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
/**
 * CreateClassificationRequest
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-05-24T16:11:32.543455-05:00[America/Chicago]")

public class CreateClassificationRequest {
  @SerializedName("model")
  private String model = null;

  @SerializedName("query")
  private String query = null;

  @SerializedName("examples")
  private List<List<String>> examples = null;

  @SerializedName("file")
  private String file = null;

  @SerializedName("labels")
  private List<String> labels = null;

  @SerializedName("search_model")
  private String searchModel = "ada";

  @SerializedName("temperature")
  private BigDecimal temperature = new BigDecimal(0);

  @SerializedName("logprobs")
  private Integer logprobs = null;

  @SerializedName("max_examples")
  private Integer maxExamples = 200;

  @SerializedName("logit_bias")
  private Object logitBias = null;

  @SerializedName("return_prompt")
  private Boolean returnPrompt = false;

  @SerializedName("return_metadata")
  private Boolean returnMetadata = false;

  @SerializedName("expand")
  private List<Object> expand = null;

  @SerializedName("user")
  private String user = null;

  public CreateClassificationRequest model(String model) {
    this.model = model;
    return this;
  }

   /**
   * ID of the model to use. You can use the [List models](/docs/api-reference/models/list) API to see all of your available models, or see our [Model overview](/docs/models/overview) for descriptions of them.
   * @return model
  **/
  @Schema(required = true, description = "ID of the model to use. You can use the [List models](/docs/api-reference/models/list) API to see all of your available models, or see our [Model overview](/docs/models/overview) for descriptions of them.")
  public String getModel() {
    return model;
  }

  public void setModel(String model) {
    this.model = model;
  }

  public CreateClassificationRequest query(String query) {
    this.query = query;
    return this;
  }

   /**
   * Query to be classified.
   * @return query
  **/
  @Schema(example = "The plot is not very attractive.", required = true, description = "Query to be classified.")
  public String getQuery() {
    return query;
  }

  public void setQuery(String query) {
    this.query = query;
  }

  public CreateClassificationRequest examples(List<List<String>> examples) {
    this.examples = examples;
    return this;
  }

  public CreateClassificationRequest addExamplesItem(List<String> examplesItem) {
    if (this.examples == null) {
      this.examples = new ArrayList<List<String>>();
    }
    this.examples.add(examplesItem);
    return this;
  }

   /**
   * A list of examples with labels, in the following format:  &#x60;[[\&quot;The movie is so interesting.\&quot;, \&quot;Positive\&quot;], [\&quot;It is quite boring.\&quot;, \&quot;Negative\&quot;], ...]&#x60;  All the label strings will be normalized to be capitalized.  You should specify either &#x60;examples&#x60; or &#x60;file&#x60;, but not both. 
   * @return examples
  **/
  @Schema(example = "[['Do not see this film.', 'Negative'], ['Smart, provocative and blisteringly funny.', 'Positive']]", description = "A list of examples with labels, in the following format:  `[[\"The movie is so interesting.\", \"Positive\"], [\"It is quite boring.\", \"Negative\"], ...]`  All the label strings will be normalized to be capitalized.  You should specify either `examples` or `file`, but not both. ")
  public List<List<String>> getExamples() {
    return examples;
  }

  public void setExamples(List<List<String>> examples) {
    this.examples = examples;
  }

  public CreateClassificationRequest file(String file) {
    this.file = file;
    return this;
  }

   /**
   * The ID of the uploaded file that contains training examples. See [upload file](/docs/api-reference/files/upload) for how to upload a file of the desired format and purpose.  You should specify either &#x60;examples&#x60; or &#x60;file&#x60;, but not both. 
   * @return file
  **/
  @Schema(description = "The ID of the uploaded file that contains training examples. See [upload file](/docs/api-reference/files/upload) for how to upload a file of the desired format and purpose.  You should specify either `examples` or `file`, but not both. ")
  public String getFile() {
    return file;
  }

  public void setFile(String file) {
    this.file = file;
  }

  public CreateClassificationRequest labels(List<String> labels) {
    this.labels = labels;
    return this;
  }

  public CreateClassificationRequest addLabelsItem(String labelsItem) {
    if (this.labels == null) {
      this.labels = new ArrayList<String>();
    }
    this.labels.add(labelsItem);
    return this;
  }

   /**
   * The set of categories being classified. If not specified, candidate labels will be automatically collected from the examples you provide. All the label strings will be normalized to be capitalized.
   * @return labels
  **/
  @Schema(example = "[\"Positive\",\"Negative\"]", description = "The set of categories being classified. If not specified, candidate labels will be automatically collected from the examples you provide. All the label strings will be normalized to be capitalized.")
  public List<String> getLabels() {
    return labels;
  }

  public void setLabels(List<String> labels) {
    this.labels = labels;
  }

  public CreateClassificationRequest searchModel(String searchModel) {
    this.searchModel = searchModel;
    return this;
  }

   /**
   * ID of the model to use for [Search](/docs/api-reference/searches/create). You can select one of &#x60;ada&#x60;, &#x60;babbage&#x60;, &#x60;curie&#x60;, or &#x60;davinci&#x60;.
   * @return searchModel
  **/
  @Schema(description = "ID of the model to use for [Search](/docs/api-reference/searches/create). You can select one of `ada`, `babbage`, `curie`, or `davinci`.")
  public String getSearchModel() {
    return searchModel;
  }

  public void setSearchModel(String searchModel) {
    this.searchModel = searchModel;
  }

  public CreateClassificationRequest temperature(BigDecimal temperature) {
    this.temperature = temperature;
    return this;
  }

   /**
   * What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic.
   * minimum: 0
   * maximum: 2
   * @return temperature
  **/
  @Schema(example = "0", description = "What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic.")
  public BigDecimal getTemperature() {
    return temperature;
  }

  public void setTemperature(BigDecimal temperature) {
    this.temperature = temperature;
  }

  public CreateClassificationRequest logprobs(Integer logprobs) {
    this.logprobs = logprobs;
    return this;
  }

   /**
   * Include the log probabilities on the &#x60;logprobs&#x60; most likely tokens, as well the chosen tokens. For example, if &#x60;logprobs&#x60; is 5, the API will return a list of the 5 most likely tokens. The API will always return the &#x60;logprob&#x60; of the sampled token, so there may be up to &#x60;logprobs+1&#x60; elements in the response.  The maximum value for &#x60;logprobs&#x60; is 5. If you need more than this, please contact us through our [Help center](https://help.openai.com) and describe your use case.  When &#x60;logprobs&#x60; is set, &#x60;completion&#x60; will be automatically added into &#x60;expand&#x60; to get the logprobs. 
   * minimum: 0
   * maximum: 5
   * @return logprobs
  **/
  @Schema(description = "Include the log probabilities on the `logprobs` most likely tokens, as well the chosen tokens. For example, if `logprobs` is 5, the API will return a list of the 5 most likely tokens. The API will always return the `logprob` of the sampled token, so there may be up to `logprobs+1` elements in the response.  The maximum value for `logprobs` is 5. If you need more than this, please contact us through our [Help center](https://help.openai.com) and describe your use case.  When `logprobs` is set, `completion` will be automatically added into `expand` to get the logprobs. ")
  public Integer getLogprobs() {
    return logprobs;
  }

  public void setLogprobs(Integer logprobs) {
    this.logprobs = logprobs;
  }

  public CreateClassificationRequest maxExamples(Integer maxExamples) {
    this.maxExamples = maxExamples;
    return this;
  }

   /**
   * The maximum number of examples to be ranked by [Search](/docs/api-reference/searches/create) when using &#x60;file&#x60;. Setting it to a higher value leads to improved accuracy but with increased latency and cost.
   * @return maxExamples
  **/
  @Schema(description = "The maximum number of examples to be ranked by [Search](/docs/api-reference/searches/create) when using `file`. Setting it to a higher value leads to improved accuracy but with increased latency and cost.")
  public Integer getMaxExamples() {
    return maxExamples;
  }

  public void setMaxExamples(Integer maxExamples) {
    this.maxExamples = maxExamples;
  }

  public CreateClassificationRequest logitBias(Object logitBias) {
    this.logitBias = logitBias;
    return this;
  }

   /**
   * Modify the likelihood of specified tokens appearing in the completion.  Accepts a json object that maps tokens (specified by their token ID in the GPT tokenizer) to an associated bias value from -100 to 100. You can use this [tokenizer tool](/tokenizer?view&#x3D;bpe) (which works for both GPT-2 and GPT-3) to convert text to token IDs. Mathematically, the bias is added to the logits generated by the model prior to sampling. The exact effect will vary per model, but values between -1 and 1 should decrease or increase likelihood of selection; values like -100 or 100 should result in a ban or exclusive selection of the relevant token.  As an example, you can pass &#x60;{\&quot;50256\&quot;: -100}&#x60; to prevent the &lt;|endoftext|&gt; token from being generated. 
   * @return logitBias
  **/
  @Schema(description = "Modify the likelihood of specified tokens appearing in the completion.  Accepts a json object that maps tokens (specified by their token ID in the GPT tokenizer) to an associated bias value from -100 to 100. You can use this [tokenizer tool](/tokenizer?view=bpe) (which works for both GPT-2 and GPT-3) to convert text to token IDs. Mathematically, the bias is added to the logits generated by the model prior to sampling. The exact effect will vary per model, but values between -1 and 1 should decrease or increase likelihood of selection; values like -100 or 100 should result in a ban or exclusive selection of the relevant token.  As an example, you can pass `{\"50256\": -100}` to prevent the <|endoftext|> token from being generated. ")
  public Object getLogitBias() {
    return logitBias;
  }

  public void setLogitBias(Object logitBias) {
    this.logitBias = logitBias;
  }

  public CreateClassificationRequest returnPrompt(Boolean returnPrompt) {
    this.returnPrompt = returnPrompt;
    return this;
  }

   /**
   * If set to &#x60;true&#x60;, the returned JSON will include a \&quot;prompt\&quot; field containing the final prompt that was used to request a completion. This is mainly useful for debugging purposes.
   * @return returnPrompt
  **/
  @Schema(description = "If set to `true`, the returned JSON will include a \"prompt\" field containing the final prompt that was used to request a completion. This is mainly useful for debugging purposes.")
  public Boolean isReturnPrompt() {
    return returnPrompt;
  }

  public void setReturnPrompt(Boolean returnPrompt) {
    this.returnPrompt = returnPrompt;
  }

  public CreateClassificationRequest returnMetadata(Boolean returnMetadata) {
    this.returnMetadata = returnMetadata;
    return this;
  }

   /**
   * A special boolean flag for showing metadata. If set to &#x60;true&#x60;, each document entry in the returned JSON will contain a \&quot;metadata\&quot; field.  This flag only takes effect when &#x60;file&#x60; is set. 
   * @return returnMetadata
  **/
  @Schema(description = "A special boolean flag for showing metadata. If set to `true`, each document entry in the returned JSON will contain a \"metadata\" field.  This flag only takes effect when `file` is set. ")
  public Boolean isReturnMetadata() {
    return returnMetadata;
  }

  public void setReturnMetadata(Boolean returnMetadata) {
    this.returnMetadata = returnMetadata;
  }

  public CreateClassificationRequest expand(List<Object> expand) {
    this.expand = expand;
    return this;
  }

  public CreateClassificationRequest addExpandItem(Object expandItem) {
    if (this.expand == null) {
      this.expand = new ArrayList<Object>();
    }
    this.expand.add(expandItem);
    return this;
  }

   /**
   * If an object name is in the list, we provide the full information of the object; otherwise, we only provide the object ID. Currently we support &#x60;completion&#x60; and &#x60;file&#x60; objects for expansion.
   * @return expand
  **/
  @Schema(description = "If an object name is in the list, we provide the full information of the object; otherwise, we only provide the object ID. Currently we support `completion` and `file` objects for expansion.")
  public List<Object> getExpand() {
    return expand;
  }

  public void setExpand(List<Object> expand) {
    this.expand = expand;
  }

  public CreateClassificationRequest user(String user) {
    this.user = user;
    return this;
  }

   /**
   * A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids). 
   * @return user
  **/
  @Schema(example = "user-1234", description = "A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids). ")
  public String getUser() {
    return user;
  }

  public void setUser(String user) {
    this.user = user;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateClassificationRequest createClassificationRequest = (CreateClassificationRequest) o;
    return Objects.equals(this.model, createClassificationRequest.model) &&
        Objects.equals(this.query, createClassificationRequest.query) &&
        Objects.equals(this.examples, createClassificationRequest.examples) &&
        Objects.equals(this.file, createClassificationRequest.file) &&
        Objects.equals(this.labels, createClassificationRequest.labels) &&
        Objects.equals(this.searchModel, createClassificationRequest.searchModel) &&
        Objects.equals(this.temperature, createClassificationRequest.temperature) &&
        Objects.equals(this.logprobs, createClassificationRequest.logprobs) &&
        Objects.equals(this.maxExamples, createClassificationRequest.maxExamples) &&
        Objects.equals(this.logitBias, createClassificationRequest.logitBias) &&
        Objects.equals(this.returnPrompt, createClassificationRequest.returnPrompt) &&
        Objects.equals(this.returnMetadata, createClassificationRequest.returnMetadata) &&
        Objects.equals(this.expand, createClassificationRequest.expand) &&
        Objects.equals(this.user, createClassificationRequest.user);
  }

  @Override
  public int hashCode() {
    return Objects.hash(model, query, examples, file, labels, searchModel, temperature, logprobs, maxExamples, logitBias, returnPrompt, returnMetadata, expand, user);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateClassificationRequest {\n");
    
    sb.append("    model: ").append(toIndentedString(model)).append("\n");
    sb.append("    query: ").append(toIndentedString(query)).append("\n");
    sb.append("    examples: ").append(toIndentedString(examples)).append("\n");
    sb.append("    file: ").append(toIndentedString(file)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("    searchModel: ").append(toIndentedString(searchModel)).append("\n");
    sb.append("    temperature: ").append(toIndentedString(temperature)).append("\n");
    sb.append("    logprobs: ").append(toIndentedString(logprobs)).append("\n");
    sb.append("    maxExamples: ").append(toIndentedString(maxExamples)).append("\n");
    sb.append("    logitBias: ").append(toIndentedString(logitBias)).append("\n");
    sb.append("    returnPrompt: ").append(toIndentedString(returnPrompt)).append("\n");
    sb.append("    returnMetadata: ").append(toIndentedString(returnMetadata)).append("\n");
    sb.append("    expand: ").append(toIndentedString(expand)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
