/*
 * OpenAI API
 * APIs for sampling from and fine-tuning language models
 *
 * OpenAPI spec version: 1.2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.clockwork.openai.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * CreateSearchRequest
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-05-24T16:11:32.543455-05:00[America/Chicago]")

public class CreateSearchRequest {
  @SerializedName("query")
  private String query = null;

  @SerializedName("documents")
  private List<String> documents = null;

  @SerializedName("file")
  private String file = null;

  @SerializedName("max_rerank")
  private Integer maxRerank = 200;

  @SerializedName("return_metadata")
  private Boolean returnMetadata = false;

  @SerializedName("user")
  private String user = null;

  public CreateSearchRequest query(String query) {
    this.query = query;
    return this;
  }

   /**
   * Query to search against the documents.
   * @return query
  **/
  @Schema(example = "the president", required = true, description = "Query to search against the documents.")
  public String getQuery() {
    return query;
  }

  public void setQuery(String query) {
    this.query = query;
  }

  public CreateSearchRequest documents(List<String> documents) {
    this.documents = documents;
    return this;
  }

  public CreateSearchRequest addDocumentsItem(String documentsItem) {
    if (this.documents == null) {
      this.documents = new ArrayList<String>();
    }
    this.documents.add(documentsItem);
    return this;
  }

   /**
   * Up to 200 documents to search over, provided as a list of strings.  The maximum document length (in tokens) is 2034 minus the number of tokens in the query.  You should specify either &#x60;documents&#x60; or a &#x60;file&#x60;, but not both. 
   * @return documents
  **/
  @Schema(example = "['White House', 'hospital', 'school']", description = "Up to 200 documents to search over, provided as a list of strings.  The maximum document length (in tokens) is 2034 minus the number of tokens in the query.  You should specify either `documents` or a `file`, but not both. ")
  public List<String> getDocuments() {
    return documents;
  }

  public void setDocuments(List<String> documents) {
    this.documents = documents;
  }

  public CreateSearchRequest file(String file) {
    this.file = file;
    return this;
  }

   /**
   * The ID of an uploaded file that contains documents to search over.  You should specify either &#x60;documents&#x60; or a &#x60;file&#x60;, but not both. 
   * @return file
  **/
  @Schema(description = "The ID of an uploaded file that contains documents to search over.  You should specify either `documents` or a `file`, but not both. ")
  public String getFile() {
    return file;
  }

  public void setFile(String file) {
    this.file = file;
  }

  public CreateSearchRequest maxRerank(Integer maxRerank) {
    this.maxRerank = maxRerank;
    return this;
  }

   /**
   * The maximum number of documents to be re-ranked and returned by search.  This flag only takes effect when &#x60;file&#x60; is set. 
   * minimum: 1
   * @return maxRerank
  **/
  @Schema(description = "The maximum number of documents to be re-ranked and returned by search.  This flag only takes effect when `file` is set. ")
  public Integer getMaxRerank() {
    return maxRerank;
  }

  public void setMaxRerank(Integer maxRerank) {
    this.maxRerank = maxRerank;
  }

  public CreateSearchRequest returnMetadata(Boolean returnMetadata) {
    this.returnMetadata = returnMetadata;
    return this;
  }

   /**
   * A special boolean flag for showing metadata. If set to &#x60;true&#x60;, each document entry in the returned JSON will contain a \&quot;metadata\&quot; field.  This flag only takes effect when &#x60;file&#x60; is set. 
   * @return returnMetadata
  **/
  @Schema(description = "A special boolean flag for showing metadata. If set to `true`, each document entry in the returned JSON will contain a \"metadata\" field.  This flag only takes effect when `file` is set. ")
  public Boolean isReturnMetadata() {
    return returnMetadata;
  }

  public void setReturnMetadata(Boolean returnMetadata) {
    this.returnMetadata = returnMetadata;
  }

  public CreateSearchRequest user(String user) {
    this.user = user;
    return this;
  }

   /**
   * A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids). 
   * @return user
  **/
  @Schema(example = "user-1234", description = "A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids). ")
  public String getUser() {
    return user;
  }

  public void setUser(String user) {
    this.user = user;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateSearchRequest createSearchRequest = (CreateSearchRequest) o;
    return Objects.equals(this.query, createSearchRequest.query) &&
        Objects.equals(this.documents, createSearchRequest.documents) &&
        Objects.equals(this.file, createSearchRequest.file) &&
        Objects.equals(this.maxRerank, createSearchRequest.maxRerank) &&
        Objects.equals(this.returnMetadata, createSearchRequest.returnMetadata) &&
        Objects.equals(this.user, createSearchRequest.user);
  }

  @Override
  public int hashCode() {
    return Objects.hash(query, documents, file, maxRerank, returnMetadata, user);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateSearchRequest {\n");
    
    sb.append("    query: ").append(toIndentedString(query)).append("\n");
    sb.append("    documents: ").append(toIndentedString(documents)).append("\n");
    sb.append("    file: ").append(toIndentedString(file)).append("\n");
    sb.append("    maxRerank: ").append(toIndentedString(maxRerank)).append("\n");
    sb.append("    returnMetadata: ").append(toIndentedString(returnMetadata)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
