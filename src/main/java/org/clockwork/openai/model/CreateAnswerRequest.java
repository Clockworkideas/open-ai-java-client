/*
 * OpenAI API
 * APIs for sampling from and fine-tuning language models
 *
 * OpenAPI spec version: 1.2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.clockwork.openai.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
/**
 * CreateAnswerRequest
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-05-24T16:11:32.543455-05:00[America/Chicago]")

public class CreateAnswerRequest {
  @SerializedName("model")
  private String model = null;

  @SerializedName("question")
  private String question = null;

  @SerializedName("examples")
  private List<List<String>> examples = new ArrayList<List<String>>();

  @SerializedName("examples_context")
  private String examplesContext = null;

  @SerializedName("documents")
  private List<String> documents = null;

  @SerializedName("file")
  private String file = null;

  @SerializedName("search_model")
  private String searchModel = "ada";

  @SerializedName("max_rerank")
  private Integer maxRerank = 200;

  @SerializedName("temperature")
  private BigDecimal temperature = new BigDecimal(0);

  @SerializedName("logprobs")
  private Integer logprobs = null;

  @SerializedName("max_tokens")
  private Integer maxTokens = 16;

  @SerializedName("stop")
  private OneOfCreateAnswerRequestStop stop = null;

  @SerializedName("n")
  private Integer n = 1;

  @SerializedName("logit_bias")
  private Object logitBias = null;

  @SerializedName("return_metadata")
  private Boolean returnMetadata = false;

  @SerializedName("return_prompt")
  private Boolean returnPrompt = false;

  @SerializedName("expand")
  private List<Object> expand = null;

  @SerializedName("user")
  private String user = null;

  public CreateAnswerRequest model(String model) {
    this.model = model;
    return this;
  }

   /**
   * ID of the model to use for completion. You can select one of &#x60;ada&#x60;, &#x60;babbage&#x60;, &#x60;curie&#x60;, or &#x60;davinci&#x60;.
   * @return model
  **/
  @Schema(required = true, description = "ID of the model to use for completion. You can select one of `ada`, `babbage`, `curie`, or `davinci`.")
  public String getModel() {
    return model;
  }

  public void setModel(String model) {
    this.model = model;
  }

  public CreateAnswerRequest question(String question) {
    this.question = question;
    return this;
  }

   /**
   * Question to get answered.
   * @return question
  **/
  @Schema(example = "What is the capital of Japan?", required = true, description = "Question to get answered.")
  public String getQuestion() {
    return question;
  }

  public void setQuestion(String question) {
    this.question = question;
  }

  public CreateAnswerRequest examples(List<List<String>> examples) {
    this.examples = examples;
    return this;
  }

  public CreateAnswerRequest addExamplesItem(List<String> examplesItem) {
    this.examples.add(examplesItem);
    return this;
  }

   /**
   * List of (question, answer) pairs that will help steer the model towards the tone and answer format you&#x27;d like. We recommend adding 2 to 3 examples.
   * @return examples
  **/
  @Schema(example = "[['What is the capital of Canada?', 'Ottawa'], ['Which province is Ottawa in?', 'Ontario']]", required = true, description = "List of (question, answer) pairs that will help steer the model towards the tone and answer format you'd like. We recommend adding 2 to 3 examples.")
  public List<List<String>> getExamples() {
    return examples;
  }

  public void setExamples(List<List<String>> examples) {
    this.examples = examples;
  }

  public CreateAnswerRequest examplesContext(String examplesContext) {
    this.examplesContext = examplesContext;
    return this;
  }

   /**
   * A text snippet containing the contextual information used to generate the answers for the &#x60;examples&#x60; you provide.
   * @return examplesContext
  **/
  @Schema(example = "Ottawa, Canada's capital, is located in the east of southern Ontario, near the city of Montr√©al and the U.S. border.", required = true, description = "A text snippet containing the contextual information used to generate the answers for the `examples` you provide.")
  public String getExamplesContext() {
    return examplesContext;
  }

  public void setExamplesContext(String examplesContext) {
    this.examplesContext = examplesContext;
  }

  public CreateAnswerRequest documents(List<String> documents) {
    this.documents = documents;
    return this;
  }

  public CreateAnswerRequest addDocumentsItem(String documentsItem) {
    if (this.documents == null) {
      this.documents = new ArrayList<String>();
    }
    this.documents.add(documentsItem);
    return this;
  }

   /**
   * List of documents from which the answer for the input &#x60;question&#x60; should be derived. If this is an empty list, the question will be answered based on the question-answer examples.  You should specify either &#x60;documents&#x60; or a &#x60;file&#x60;, but not both. 
   * @return documents
  **/
  @Schema(example = "['Japan is an island country in East Asia, located in the northwest Pacific Ocean.', 'Tokyo is the capital and most populous prefecture of Japan.']", description = "List of documents from which the answer for the input `question` should be derived. If this is an empty list, the question will be answered based on the question-answer examples.  You should specify either `documents` or a `file`, but not both. ")
  public List<String> getDocuments() {
    return documents;
  }

  public void setDocuments(List<String> documents) {
    this.documents = documents;
  }

  public CreateAnswerRequest file(String file) {
    this.file = file;
    return this;
  }

   /**
   * The ID of an uploaded file that contains documents to search over. See [upload file](/docs/api-reference/files/upload) for how to upload a file of the desired format and purpose.  You should specify either &#x60;documents&#x60; or a &#x60;file&#x60;, but not both. 
   * @return file
  **/
  @Schema(description = "The ID of an uploaded file that contains documents to search over. See [upload file](/docs/api-reference/files/upload) for how to upload a file of the desired format and purpose.  You should specify either `documents` or a `file`, but not both. ")
  public String getFile() {
    return file;
  }

  public void setFile(String file) {
    this.file = file;
  }

  public CreateAnswerRequest searchModel(String searchModel) {
    this.searchModel = searchModel;
    return this;
  }

   /**
   * ID of the model to use for [Search](/docs/api-reference/searches/create). You can select one of &#x60;ada&#x60;, &#x60;babbage&#x60;, &#x60;curie&#x60;, or &#x60;davinci&#x60;.
   * @return searchModel
  **/
  @Schema(description = "ID of the model to use for [Search](/docs/api-reference/searches/create). You can select one of `ada`, `babbage`, `curie`, or `davinci`.")
  public String getSearchModel() {
    return searchModel;
  }

  public void setSearchModel(String searchModel) {
    this.searchModel = searchModel;
  }

  public CreateAnswerRequest maxRerank(Integer maxRerank) {
    this.maxRerank = maxRerank;
    return this;
  }

   /**
   * The maximum number of documents to be ranked by [Search](/docs/api-reference/searches/create) when using &#x60;file&#x60;. Setting it to a higher value leads to improved accuracy but with increased latency and cost.
   * @return maxRerank
  **/
  @Schema(description = "The maximum number of documents to be ranked by [Search](/docs/api-reference/searches/create) when using `file`. Setting it to a higher value leads to improved accuracy but with increased latency and cost.")
  public Integer getMaxRerank() {
    return maxRerank;
  }

  public void setMaxRerank(Integer maxRerank) {
    this.maxRerank = maxRerank;
  }

  public CreateAnswerRequest temperature(BigDecimal temperature) {
    this.temperature = temperature;
    return this;
  }

   /**
   * What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic.
   * @return temperature
  **/
  @Schema(description = "What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic.")
  public BigDecimal getTemperature() {
    return temperature;
  }

  public void setTemperature(BigDecimal temperature) {
    this.temperature = temperature;
  }

  public CreateAnswerRequest logprobs(Integer logprobs) {
    this.logprobs = logprobs;
    return this;
  }

   /**
   * Include the log probabilities on the &#x60;logprobs&#x60; most likely tokens, as well the chosen tokens. For example, if &#x60;logprobs&#x60; is 5, the API will return a list of the 5 most likely tokens. The API will always return the &#x60;logprob&#x60; of the sampled token, so there may be up to &#x60;logprobs+1&#x60; elements in the response.  The maximum value for &#x60;logprobs&#x60; is 5. If you need more than this, please contact us through our [Help center](https://help.openai.com) and describe your use case.  When &#x60;logprobs&#x60; is set, &#x60;completion&#x60; will be automatically added into &#x60;expand&#x60; to get the logprobs. 
   * minimum: 0
   * maximum: 5
   * @return logprobs
  **/
  @Schema(description = "Include the log probabilities on the `logprobs` most likely tokens, as well the chosen tokens. For example, if `logprobs` is 5, the API will return a list of the 5 most likely tokens. The API will always return the `logprob` of the sampled token, so there may be up to `logprobs+1` elements in the response.  The maximum value for `logprobs` is 5. If you need more than this, please contact us through our [Help center](https://help.openai.com) and describe your use case.  When `logprobs` is set, `completion` will be automatically added into `expand` to get the logprobs. ")
  public Integer getLogprobs() {
    return logprobs;
  }

  public void setLogprobs(Integer logprobs) {
    this.logprobs = logprobs;
  }

  public CreateAnswerRequest maxTokens(Integer maxTokens) {
    this.maxTokens = maxTokens;
    return this;
  }

   /**
   * The maximum number of tokens allowed for the generated answer
   * @return maxTokens
  **/
  @Schema(description = "The maximum number of tokens allowed for the generated answer")
  public Integer getMaxTokens() {
    return maxTokens;
  }

  public void setMaxTokens(Integer maxTokens) {
    this.maxTokens = maxTokens;
  }

  public CreateAnswerRequest stop(OneOfCreateAnswerRequestStop stop) {
    this.stop = stop;
    return this;
  }

   /**
   * Up to 4 sequences where the API will stop generating further tokens. The returned text will not contain the stop sequence. 
   * @return stop
  **/
  @Schema(description = "Up to 4 sequences where the API will stop generating further tokens. The returned text will not contain the stop sequence. ")
  public OneOfCreateAnswerRequestStop getStop() {
    return stop;
  }

  public void setStop(OneOfCreateAnswerRequestStop stop) {
    this.stop = stop;
  }

  public CreateAnswerRequest n(Integer n) {
    this.n = n;
    return this;
  }

   /**
   * How many answers to generate for each question.
   * minimum: 1
   * maximum: 10
   * @return n
  **/
  @Schema(description = "How many answers to generate for each question.")
  public Integer getN() {
    return n;
  }

  public void setN(Integer n) {
    this.n = n;
  }

  public CreateAnswerRequest logitBias(Object logitBias) {
    this.logitBias = logitBias;
    return this;
  }

   /**
   * Modify the likelihood of specified tokens appearing in the completion.  Accepts a json object that maps tokens (specified by their token ID in the GPT tokenizer) to an associated bias value from -100 to 100. You can use this [tokenizer tool](/tokenizer?view&#x3D;bpe) (which works for both GPT-2 and GPT-3) to convert text to token IDs. Mathematically, the bias is added to the logits generated by the model prior to sampling. The exact effect will vary per model, but values between -1 and 1 should decrease or increase likelihood of selection; values like -100 or 100 should result in a ban or exclusive selection of the relevant token.  As an example, you can pass &#x60;{\&quot;50256\&quot;: -100}&#x60; to prevent the &lt;|endoftext|&gt; token from being generated. 
   * @return logitBias
  **/
  @Schema(description = "Modify the likelihood of specified tokens appearing in the completion.  Accepts a json object that maps tokens (specified by their token ID in the GPT tokenizer) to an associated bias value from -100 to 100. You can use this [tokenizer tool](/tokenizer?view=bpe) (which works for both GPT-2 and GPT-3) to convert text to token IDs. Mathematically, the bias is added to the logits generated by the model prior to sampling. The exact effect will vary per model, but values between -1 and 1 should decrease or increase likelihood of selection; values like -100 or 100 should result in a ban or exclusive selection of the relevant token.  As an example, you can pass `{\"50256\": -100}` to prevent the <|endoftext|> token from being generated. ")
  public Object getLogitBias() {
    return logitBias;
  }

  public void setLogitBias(Object logitBias) {
    this.logitBias = logitBias;
  }

  public CreateAnswerRequest returnMetadata(Boolean returnMetadata) {
    this.returnMetadata = returnMetadata;
    return this;
  }

   /**
   * A special boolean flag for showing metadata. If set to &#x60;true&#x60;, each document entry in the returned JSON will contain a \&quot;metadata\&quot; field.  This flag only takes effect when &#x60;file&#x60; is set. 
   * @return returnMetadata
  **/
  @Schema(description = "A special boolean flag for showing metadata. If set to `true`, each document entry in the returned JSON will contain a \"metadata\" field.  This flag only takes effect when `file` is set. ")
  public Boolean isReturnMetadata() {
    return returnMetadata;
  }

  public void setReturnMetadata(Boolean returnMetadata) {
    this.returnMetadata = returnMetadata;
  }

  public CreateAnswerRequest returnPrompt(Boolean returnPrompt) {
    this.returnPrompt = returnPrompt;
    return this;
  }

   /**
   * If set to &#x60;true&#x60;, the returned JSON will include a \&quot;prompt\&quot; field containing the final prompt that was used to request a completion. This is mainly useful for debugging purposes.
   * @return returnPrompt
  **/
  @Schema(description = "If set to `true`, the returned JSON will include a \"prompt\" field containing the final prompt that was used to request a completion. This is mainly useful for debugging purposes.")
  public Boolean isReturnPrompt() {
    return returnPrompt;
  }

  public void setReturnPrompt(Boolean returnPrompt) {
    this.returnPrompt = returnPrompt;
  }

  public CreateAnswerRequest expand(List<Object> expand) {
    this.expand = expand;
    return this;
  }

  public CreateAnswerRequest addExpandItem(Object expandItem) {
    if (this.expand == null) {
      this.expand = new ArrayList<Object>();
    }
    this.expand.add(expandItem);
    return this;
  }

   /**
   * If an object name is in the list, we provide the full information of the object; otherwise, we only provide the object ID. Currently we support &#x60;completion&#x60; and &#x60;file&#x60; objects for expansion.
   * @return expand
  **/
  @Schema(description = "If an object name is in the list, we provide the full information of the object; otherwise, we only provide the object ID. Currently we support `completion` and `file` objects for expansion.")
  public List<Object> getExpand() {
    return expand;
  }

  public void setExpand(List<Object> expand) {
    this.expand = expand;
  }

  public CreateAnswerRequest user(String user) {
    this.user = user;
    return this;
  }

   /**
   * A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids). 
   * @return user
  **/
  @Schema(example = "user-1234", description = "A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids). ")
  public String getUser() {
    return user;
  }

  public void setUser(String user) {
    this.user = user;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateAnswerRequest createAnswerRequest = (CreateAnswerRequest) o;
    return Objects.equals(this.model, createAnswerRequest.model) &&
        Objects.equals(this.question, createAnswerRequest.question) &&
        Objects.equals(this.examples, createAnswerRequest.examples) &&
        Objects.equals(this.examplesContext, createAnswerRequest.examplesContext) &&
        Objects.equals(this.documents, createAnswerRequest.documents) &&
        Objects.equals(this.file, createAnswerRequest.file) &&
        Objects.equals(this.searchModel, createAnswerRequest.searchModel) &&
        Objects.equals(this.maxRerank, createAnswerRequest.maxRerank) &&
        Objects.equals(this.temperature, createAnswerRequest.temperature) &&
        Objects.equals(this.logprobs, createAnswerRequest.logprobs) &&
        Objects.equals(this.maxTokens, createAnswerRequest.maxTokens) &&
        Objects.equals(this.stop, createAnswerRequest.stop) &&
        Objects.equals(this.n, createAnswerRequest.n) &&
        Objects.equals(this.logitBias, createAnswerRequest.logitBias) &&
        Objects.equals(this.returnMetadata, createAnswerRequest.returnMetadata) &&
        Objects.equals(this.returnPrompt, createAnswerRequest.returnPrompt) &&
        Objects.equals(this.expand, createAnswerRequest.expand) &&
        Objects.equals(this.user, createAnswerRequest.user);
  }

  @Override
  public int hashCode() {
    return Objects.hash(model, question, examples, examplesContext, documents, file, searchModel, maxRerank, temperature, logprobs, maxTokens, stop, n, logitBias, returnMetadata, returnPrompt, expand, user);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateAnswerRequest {\n");
    
    sb.append("    model: ").append(toIndentedString(model)).append("\n");
    sb.append("    question: ").append(toIndentedString(question)).append("\n");
    sb.append("    examples: ").append(toIndentedString(examples)).append("\n");
    sb.append("    examplesContext: ").append(toIndentedString(examplesContext)).append("\n");
    sb.append("    documents: ").append(toIndentedString(documents)).append("\n");
    sb.append("    file: ").append(toIndentedString(file)).append("\n");
    sb.append("    searchModel: ").append(toIndentedString(searchModel)).append("\n");
    sb.append("    maxRerank: ").append(toIndentedString(maxRerank)).append("\n");
    sb.append("    temperature: ").append(toIndentedString(temperature)).append("\n");
    sb.append("    logprobs: ").append(toIndentedString(logprobs)).append("\n");
    sb.append("    maxTokens: ").append(toIndentedString(maxTokens)).append("\n");
    sb.append("    stop: ").append(toIndentedString(stop)).append("\n");
    sb.append("    n: ").append(toIndentedString(n)).append("\n");
    sb.append("    logitBias: ").append(toIndentedString(logitBias)).append("\n");
    sb.append("    returnMetadata: ").append(toIndentedString(returnMetadata)).append("\n");
    sb.append("    returnPrompt: ").append(toIndentedString(returnPrompt)).append("\n");
    sb.append("    expand: ").append(toIndentedString(expand)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
