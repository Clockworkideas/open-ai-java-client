/*
 * OpenAI API
 * APIs for sampling from and fine-tuning language models
 *
 * OpenAPI spec version: 1.2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.clockwork.openai.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.clockwork.openai.model.CreateAnswerResponseSelectedDocuments;
/**
 * CreateAnswerResponse
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-05-24T16:11:32.543455-05:00[America/Chicago]")

public class CreateAnswerResponse {
  @SerializedName("object")
  private String object = null;

  @SerializedName("model")
  private String model = null;

  @SerializedName("search_model")
  private String searchModel = null;

  @SerializedName("completion")
  private String completion = null;

  @SerializedName("answers")
  private List<String> answers = null;

  @SerializedName("selected_documents")
  private List<CreateAnswerResponseSelectedDocuments> selectedDocuments = null;

  public CreateAnswerResponse object(String object) {
    this.object = object;
    return this;
  }

   /**
   * Get object
   * @return object
  **/
  @Schema(description = "")
  public String getObject() {
    return object;
  }

  public void setObject(String object) {
    this.object = object;
  }

  public CreateAnswerResponse model(String model) {
    this.model = model;
    return this;
  }

   /**
   * Get model
   * @return model
  **/
  @Schema(description = "")
  public String getModel() {
    return model;
  }

  public void setModel(String model) {
    this.model = model;
  }

  public CreateAnswerResponse searchModel(String searchModel) {
    this.searchModel = searchModel;
    return this;
  }

   /**
   * Get searchModel
   * @return searchModel
  **/
  @Schema(description = "")
  public String getSearchModel() {
    return searchModel;
  }

  public void setSearchModel(String searchModel) {
    this.searchModel = searchModel;
  }

  public CreateAnswerResponse completion(String completion) {
    this.completion = completion;
    return this;
  }

   /**
   * Get completion
   * @return completion
  **/
  @Schema(description = "")
  public String getCompletion() {
    return completion;
  }

  public void setCompletion(String completion) {
    this.completion = completion;
  }

  public CreateAnswerResponse answers(List<String> answers) {
    this.answers = answers;
    return this;
  }

  public CreateAnswerResponse addAnswersItem(String answersItem) {
    if (this.answers == null) {
      this.answers = new ArrayList<String>();
    }
    this.answers.add(answersItem);
    return this;
  }

   /**
   * Get answers
   * @return answers
  **/
  @Schema(description = "")
  public List<String> getAnswers() {
    return answers;
  }

  public void setAnswers(List<String> answers) {
    this.answers = answers;
  }

  public CreateAnswerResponse selectedDocuments(List<CreateAnswerResponseSelectedDocuments> selectedDocuments) {
    this.selectedDocuments = selectedDocuments;
    return this;
  }

  public CreateAnswerResponse addSelectedDocumentsItem(CreateAnswerResponseSelectedDocuments selectedDocumentsItem) {
    if (this.selectedDocuments == null) {
      this.selectedDocuments = new ArrayList<CreateAnswerResponseSelectedDocuments>();
    }
    this.selectedDocuments.add(selectedDocumentsItem);
    return this;
  }

   /**
   * Get selectedDocuments
   * @return selectedDocuments
  **/
  @Schema(description = "")
  public List<CreateAnswerResponseSelectedDocuments> getSelectedDocuments() {
    return selectedDocuments;
  }

  public void setSelectedDocuments(List<CreateAnswerResponseSelectedDocuments> selectedDocuments) {
    this.selectedDocuments = selectedDocuments;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateAnswerResponse createAnswerResponse = (CreateAnswerResponse) o;
    return Objects.equals(this.object, createAnswerResponse.object) &&
        Objects.equals(this.model, createAnswerResponse.model) &&
        Objects.equals(this.searchModel, createAnswerResponse.searchModel) &&
        Objects.equals(this.completion, createAnswerResponse.completion) &&
        Objects.equals(this.answers, createAnswerResponse.answers) &&
        Objects.equals(this.selectedDocuments, createAnswerResponse.selectedDocuments);
  }

  @Override
  public int hashCode() {
    return Objects.hash(object, model, searchModel, completion, answers, selectedDocuments);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateAnswerResponse {\n");
    
    sb.append("    object: ").append(toIndentedString(object)).append("\n");
    sb.append("    model: ").append(toIndentedString(model)).append("\n");
    sb.append("    searchModel: ").append(toIndentedString(searchModel)).append("\n");
    sb.append("    completion: ").append(toIndentedString(completion)).append("\n");
    sb.append("    answers: ").append(toIndentedString(answers)).append("\n");
    sb.append("    selectedDocuments: ").append(toIndentedString(selectedDocuments)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
